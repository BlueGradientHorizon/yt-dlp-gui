<Window x:Class="yt_dlp_gui.Views.Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:yt_dlp_gui.Controls"
        xmlns:m="clr-namespace:yt_dlp_gui.Models"
        mc:Ignorable="d" Style="{DynamicResource WindowStyle}" 
        Title="yt-dlp-gui" Width="600" Height="360"
        Background="{StaticResource BackgroundColour}"
        Icon="pack://application:,,,/Resources/logo.ico">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.SaveAs" CanExecute="CommandBinding_SaveAs_CanExecute" Executed="CommandBinding_SaveAs_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <ControlTemplate TargetType="ContentControl" x:Key="WindowExtend">
            <StackPanel Orientation="Horizontal">
                <Button BorderBrush="Transparent" Background="Transparent"
                        Width="40" WindowChrome.IsHitTestVisibleInChrome="True"
                        Click="Button_Release">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NewVersion}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <controls:Icons Size="18" Kind="NewBox"/>
                </Button>

                <Menu WindowChrome.IsHitTestVisibleInChrome="True">
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <MenuItem Style="{StaticResource  TopLevelMenu}" Width="40"
                              VerticalAlignment="Center" Padding="0">
                        <MenuItem.Icon>
                            <controls:Icons Kind="MenuDown" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </MenuItem.Icon>
                        <MenuItem Header="About..." Click="MenuItem_About_Click">
                            <MenuItem.Icon>
                                <controls:Icons Size="14" Kind="Information"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid Margin="4" Grid.IsSharedSizeScope="True">
        <Grid.Resources>
            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="Margin" Value="0,2"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <!-- Url-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <Grid Grid.Row="0" Grid.ColumnSpan="23">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Button"/>
            </Grid.ColumnDefinitions>
            <controls:TextEditor Helper="Url" Margin="0,2" IsEnabled="{Binding Enable.Url}" 
                                 WordWrap="True"
                                 Text="{Binding Url}" Syntax="url" EnableHyperlinks="False">
                <controls:TextEditor.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="ApplicationCommands.Cut">
                            <MenuItem.Icon>
                                <controls:Icons Size="14" Kind="ContentCut"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="ApplicationCommands.Copy">
                            <MenuItem.Icon>
                                <controls:Icons Size="14" Kind="ContentCopy"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="ApplicationCommands.Paste">
                            <MenuItem.Icon>
                                <controls:Icons Size="14" Kind="ContentPaste"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="ApplicationCommands.Delete">
                            <MenuItem.Icon>
                                <controls:Icons Size="14" Kind="Eraser"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </controls:TextEditor.ContextMenu>
            </controls:TextEditor>
            <Button Grid.Column="2" IsEnabled="{Binding Enable.Analyze}" Margin="2" Click="Button_Analyze">
                <StackPanel Orientation="Horizontal" Margin="4,0">
                    <controls:Icons Size="14" Kind="Magnify" IsLoading="{Binding IsAnalyze}"/>
                    <TextBlock Margin="2,0,0,0" Text="Analyze"/>
                </StackPanel>
            </Button>
        </Grid>
        <!--UseCookie-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <StackPanel Grid.Row="3" Orientation="Horizontal">
            <TextBlock Text="Cookie" Margin="0,0,4,0" VerticalAlignment="Center"/>
            <ComboBox SelectedValue="{Binding UseCookie}" SelectedValuePath="Tag" IsEnabled="{Binding Enable.UseCookie}">
                <ComboBoxItem Content="When Needed" Tag="{x:Static m:UseCookie.WhenNeeded}"/>
                <ComboBoxItem Content="Never" Tag="{x:Static m:UseCookie.Never}"/>
                <ComboBoxItem Content="Always" Tag="{x:Static m:UseCookie.Always}"/>
            </ComboBox>
            <TextBlock Text="Use" Margin="4,0" VerticalAlignment="Center"/>
            <ComboBox SelectedValue="{Binding CookieType}" SelectedValuePath="Tag" IsEnabled="{Binding Enable.CookieType}">
                <ComboBoxItem Content="Chrome" Tag="{x:Static m:CookieType.Chrome}"/>
                <ComboBoxItem Content="Edge" Tag="{x:Static m:CookieType.Edge}"/>
                <ComboBoxItem Content="Firefox" Tag="{x:Static m:CookieType.Firefox}"/>
                <ComboBoxItem Content="Opera" Tag="{x:Static m:CookieType.Opera}"/>
                <ComboBoxItem Content="Vivaldi" Tag="{x:Static m:CookieType.Vivaldi}"/>
                <Separator/>
                <ComboBoxItem Content="Chromium" Tag="{x:Static m:CookieType.Chromium}"/>
                <ComboBoxItem Content="Chrome Beta" Tag="{x:Static m:CookieType.Chrome_Beta}"/>
            </ComboBox>
        </StackPanel>
        <!-- Thumbnail -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <Grid Grid.Row="3" Grid.Column="2" Grid.RowSpan="6">
            <StackPanel>
                <Border BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                    BorderThickness="1" Margin="2"
                    Height="{Binding ImageHeight}" VerticalAlignment="Top" >
                    <i:Interaction.Behaviors>
                        <controls:ActualSize ActualWidth="{Binding ImageWidth}"/>
                    </i:Interaction.Behaviors>
                    <Grid>
                        <TextBlock Text="Thumbnail" Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Image VerticalAlignment="Center" Stretch="UniformToFill"
                            Source="{Binding Thumbnail, TargetNullValue={x:Null}}">
                            <Image.CacheMode>
                                <BitmapCache EnableClearType="False" RenderAtScale="1" SnapsToDevicePixels="False"/>
                            </Image.CacheMode>
                        </Image>
                        <TextBlock Background="#60000000" Foreground="White" Padding="4,0"
                                   IsHitTestVisible="False"
                                   HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                   controls:Duration.Secs="{Binding Video.duration}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Thumbnail}" Value="">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Thumbnail}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Border.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="ApplicationCommands.SaveAs">
                                <MenuItem.Icon>
                                    <controls:Icons Size="14" Kind="ContentSave"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Border.ContextMenu>
                </Border>
                <CheckBox Grid.Column="2" Content="Download Thumbnail" VerticalAlignment="Center" 
                          IsEnabled="{Binding Enable.SaveThumbnail}"
                          Margin="2,0" IsChecked="{Binding SaveThumbnail}"
                          HorizontalAlignment="Left"/>
            </StackPanel>
        </Grid>
        <!-- Title-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <controls:TextEditor Grid.Row="4" Helper="Title" Text="{Binding Video.title}" 
                             Margin="0,2" IsReadOnly="True" WordWrap="True"
                             EnableHyperlinks="False">
            <controls:TextEditor.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="ApplicationCommands.Copy">
                        <MenuItem.Icon>
                            <controls:Icons Size="14" Kind="ContentCopy"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </controls:TextEditor.ContextMenu>
        </controls:TextEditor>
        <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <controls:TextEditor Grid.Row="5" Helper="Description"
                             Margin="0,2" Syntax="desc"
                             Multiline="True" EnableHyperlinks="True" IsReadOnly="True"
                             Text="{Binding Video.description}">
            <controls:TextEditor.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="ApplicationCommands.Copy">
                        <MenuItem.Icon>
                            <controls:Icons Size="14" Kind="ContentCopy"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </controls:TextEditor.ContextMenu>
        </controls:TextEditor>
        <!-- Video-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <Grid Grid.Row="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Video" VerticalAlignment="Center" Margin="0,0,4,0"/>

            <ComboBox Grid.Column="1"
                      x:Name="cv" IsEnabled="{Binding Enable.FormatVideo}"
                      Template="{StaticResource ComboBoxTemplateForVideo}"
                      SelectedValue="{Binding selectedVideo}" 
                      ItemsSource="{Binding FormatsVideo}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="2,0"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="S0" />
                                <ColumnDefinition SharedSizeGroup="S1" />
                                <ColumnDefinition SharedSizeGroup="S2" />
                                <ColumnDefinition SharedSizeGroup="S3" />
                                <ColumnDefinition SharedSizeGroup="S4" />
                            </Grid.ColumnDefinitions>
                            <controls:Icons Size="14">
                                <controls:Icons.Style>
                                    <Style TargetType="controls:Icons">
                                        <Setter Property="Kind" Value="None"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding type}" Value="package">
                                                <Setter Property="Kind" Value="LinkVariant"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:Icons.Style>
                            </controls:Icons>
                            <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding resolution}"/>
                            <TextBlock Grid.Column="2" Text="{Binding video_ext}"/>
                            <TextBlock Grid.Column="3" Text="{Binding vcodec}"/>
                            <TextBlock Grid.Column="4" HorizontalAlignment="Right" controls:Filesize.Bytes="{Binding filesize}"/>
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <d:ComboBoxItem IsSelected="True">1920×1080 vp9 30fps 76.58MB</d:ComboBoxItem>
            </ComboBox>
            <ProgressBar Grid.Column="1" Value="{Binding VideoPersent}" Margin="1,3" IsHitTestVisible="False"
                         BorderThickness="0" Background="Transparent" Foreground="#3000ff00">
                <ProgressBar.Style>
                    <Style TargetType="ProgressBar">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDownload}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>
            </ProgressBar>
        </Grid>
        <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <Grid Grid.Row="7">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Audio" VerticalAlignment="Center" Margin="0,0,4,0"/>
            <ComboBox x:Name="ca" Grid.Column="1"
                  Template="{StaticResource ComboBoxTemplateForAudio}"
                  SelectedValue="{Binding selectedAudio}" IsEnabled="{Binding Enable.FormatAudio}"
                  ItemsSource="{Binding FormatsAudio}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DataContext.selectedVideo.type ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" Value="video"/>
                                    <Condition Binding="{Binding type}" Value="package"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.ItemContainerStyle>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="2,0"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="S0" />
                                <ColumnDefinition SharedSizeGroup="S1" />
                                <ColumnDefinition SharedSizeGroup="S2" />
                                <ColumnDefinition SharedSizeGroup="S3" />
                                <ColumnDefinition SharedSizeGroup="S4" />
                            </Grid.ColumnDefinitions>
                            <controls:Icons Size="14">
                                <controls:Icons.Style>
                                    <Style TargetType="controls:Icons">
                                        <Setter Property="Kind" Value="None"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding type}" Value="package">
                                                <Setter Property="Kind" Value="LinkVariant"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:Icons.Style>
                            </controls:Icons>
                            <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding asr, StringFormat={}{0}Hz}"/>
                            <TextBlock Grid.Column="2" Text="{Binding audio_ext}"/>
                            <TextBlock Grid.Column="3" Text="{Binding acodec}"/>
                            <TextBlock Grid.Column="4" HorizontalAlignment="Right" controls:Filesize.Bytes="{Binding filesize}"/>
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <d:ComboBoxItem IsSelected="True">1920×1080 vp9 30fps 76.58MB</d:ComboBoxItem>
            </ComboBox>
            <ProgressBar Grid.Column="1" Value="{Binding AudioPersent}" Margin="1,3" IsHitTestVisible="False"
                         BorderThickness="0" Background="Transparent" Foreground="#3000ff00">
                <ProgressBar.Style>
                    <Style TargetType="ProgressBar">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDownload}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>
            </ProgressBar>
        </Grid>
        <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <Grid Grid.Row="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Subtitle" VerticalAlignment="Center" Margin="0,0,4,0"/>
            <ComboBox x:Name="cs" Grid.Column="1"
                      IsEnabled="{Binding Enable.SelectSubtitle}"
                      SelectedValue="{Binding selectedSub}" 
                      DisplayMemberPath="name"
                      ItemsSource="{Binding SubtitlesView}"/>
            <ProgressBar Grid.Column="1" Value="{Binding SubtitlePersent}" Margin="1,3" IsHitTestVisible="False"
                         BorderThickness="0" Background="Transparent" Foreground="#3000ff00">
                <ProgressBar.Style>
                    <Style TargetType="ProgressBar">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDownload}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>
            </ProgressBar>
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Button Grid.Column="2" Margin="2,2,0,2" Padding="3,0" 
                        IsEnabled="{Binding Enable.SaveSubtitle}" Click="Button_Subtitle">
                    <controls:Icons Size="14" Kind="Download"/>
                </Button>
            </StackPanel>
        </Grid>
        <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ -->
        <Grid Grid.Row="10" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Button"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Button"/>
            </Grid.ColumnDefinitions>
            <controls:TextEditor Helper="Save As..." Text="{Binding TargetDisplay}" 
                                 IsReadOnly="True" WordWrap="True" Margin="0,2"/>
            <Button Grid.Column="1" IsEnabled="{Binding Enable.Browser}" 
                    Margin="4,2,2,2" Click="Button_Browser">
                <TextBlock Margin="2,0,0,0" Text="Browse"/>
            </Button>
            <Button Grid.Column="2" IsEnabled="{Binding Enable.Download}" Margin="2" Click="Button_Download">
                <StackPanel Orientation="Horizontal" Margin="4,0">
                    <controls:Icons Size="14" Kind="Download" IsLoading="{Binding IsDownload}"/>
                    <TextBlock Margin="2,0,0,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Text" Value="Download"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDownload}" Value="True">
                                        <Setter Property="Text" Value="Cancel"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Button>
        </Grid>
    </Grid>
</Window>
